run:
  go: "1.23"
  timeout: 3m
version: "2"
linters:
  enable:
    ## enabled by default
    - unused # Finds unused code
    #    - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases
    #    - gosimple # Linter for Go source code that specializes in simplifying a code
    - govet # Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string
    - ineffassign # Detects when assignments to existing variables are not used
    #    - staticcheck # Staticcheck is a go vet on steroids, applying a ton of static analysis checks
    #    - structcheck # Finds unused struct fields
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code
    #    - unused # Checks Go code for unused constants, variables, functions and types
    #    - varcheck # Finds unused global variables and constants
    #    ## disabled by default
    #    - contextcheck # check the function whether use a non-inherited context
    #    - cyclop # checks function and package cyclomatic complexity
    #    - errname # Checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error.
    #    - gocritic # Provides diagnostics that check for bugs, performance and style issues.
    #    - gocyclo # Computes and checks the cyclomatic complexity of functions
    #    - nestif # Reports deeply nested if statements
    - revive # Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.
#    - sqlclosecheck # Checks that sql.Rows and sql.Stmt are closed
#    - stylecheck # Stylecheck is a replacement for golint
#    - wastedassign # wastedassign finds wasted assignment statements.
#    - whitespace # Tool for detection of leading and trailing whitespace
