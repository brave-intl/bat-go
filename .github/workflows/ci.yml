# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
      - prod
      - dev
  pull_request:
    branches:
      - master
      - prod

env:
  GO111MODULE: on
  TEST_TAGS: "integration"
  DATABASE_MIGRATIONS_URL: "file://$(pwd)/migrations"
  UPHOLD_ACCESS_TOKEN: ${{ secrets.UpholdAccessToken }}
  GRANT_WALLET_PUBLIC_KEY: ${{ secrets.GrantWalletPublicKey }}
  GRANT_WALLET_PRIVATE_KEY: ${{ secrets.GrantWalletPrivateKey }}
  GRANT_WALLET_CARD_ID: ${{ secrets.GrantWalletCardID }}
  DONOR_WALLET_PUBLIC_KEY: ${{ secrets.DonorWalletPublicKey }}
  DONOR_WALLET_PRIVATE_KEY: ${{ secrets.DonorWalletPrivateKey }}
  DONOR_WALLET_CARD_ID: ${{ secrets.DonorWalletCardID }}
  BAT_SETTLEMENT_ADDRESS: ${{ secrets.BATSettlementAddress }}
  GEMINI_SERVER: ${{ secrets.GeminiServer }}
  GEMINI_CLIENT_KEY: ${{ secrets.GeminiClientKey }}
  GEMINI_CLIENT_SECRET: ${{ secrets.GeminiClientSecret }}
  GEMINI_CLIENT_ID: ${{ secrets.GeminiClientID }}
  GEMINI_TEST_DESTINATION_ID: ${{ secrets.GeminiTestDestinationID }}
  RATIOS_TOKEN: ${{ secrets.RatiosToken }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Docker Compose Install
        uses: KengoTODA/actions-setup-docker-compose@main
        with:
          version: '1.25.4'

      - run: docker-compose pull
      - uses: satackey/action-docker-layer-caching@v0.0.8
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: docker-cache-{hash}
          restore-keys: |
            docker-cache-

      - name: Test
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d vault
          sleep 3
          VAULT_TOKEN=$(docker logs grant-vault 2>&1 | grep "Root Token" | tail -1 | cut -d ' ' -f 3 ) docker-compose -f docker-compose.yml -f docker-compose.dev.yml run --rm  dev make
