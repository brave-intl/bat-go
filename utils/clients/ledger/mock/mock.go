// Code generated by MockGen. DO NOT EDIT.
// Source: ./utils/clients/ledger/client.go

// Package mock_ledger is a generated GoMock package.
package mock_ledger

import (
	context "context"
	wallet "github.com/brave-intl/bat-go/utils/wallet"
	gomock "github.com/golang/mock/gomock"
	go_uuid "github.com/satori/go.uuid"
	reflect "reflect"
)

// MockClient is a mock of Client interface
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// GetWallet mocks base method
func (m *MockClient) GetWallet(ctx context.Context, id go_uuid.UUID) (*wallet.Info, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWallet", ctx, id)
	ret0, _ := ret[0].(*wallet.Info)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWallet indicates an expected call of GetWallet
func (mr *MockClientMockRecorder) GetWallet(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWallet", reflect.TypeOf((*MockClient)(nil).GetWallet), ctx, id)
}
