version: "3.4"

networks:
  grant:
    driver: bridge

services:
  dev:
    container_name: grant-dev
    build:
      context: .
      target: builder
      args:
          VERSION: "${VERSION}"
          COMMIT: "${COMMIT}"
          BUILD_TIME: "${BUILD_TIME}"
    environment:
      - PPROF_ENABLED=true
      - ENABLE_LINKING_DRAINING=true
      - DRAIN_RETRY_JOB_ENABLED=true
      - ENV=local
      - DEBUG=1
      - BAT_SETTLEMENT_ADDRESS
      - BRAVE_TRANSFER_PROMOTION_ID
      - CHALLENGE_BYPASS_SERVER=http://challenge-bypass:2416
      - CHALLENGE_BYPASS_TOKEN
      - "DATABASE_MIGRATIONS_URL=file:///src/migrations"
      - "DATABASE_URL=postgres://grants:password@postgres/grants?sslmode=disable"
      - DONOR_WALLET_CARD_ID
      - DONOR_WALLET_PRIVATE_KEY
      - DONOR_WALLET_PUBLIC_KEY
      - GRANT_SIGNATOR_PUBLIC_KEY
      - GRANT_WALLET_CARD_ID
      - REPUTATION_SERVER
      - REPUTATION_TOKEN
      - GRANT_WALLET_PRIVATE_KEY
      - GRANT_WALLET_PUBLIC_KEY
      - TEST_PKG
      - TEST_RUN
      - KAFKA_BROKERS=kafka:19092
      - KAFKA_SSL_CA_LOCATION=/etc/kafka/secrets/snakeoil-ca-1.crt
      - KAFKA_SSL_CERTIFICATE_LOCATION=/etc/kafka/secrets/consumer-ca1-signed.pem
      - KAFKA_SSL_KEY_LOCATION=/etc/kafka/secrets/consumer.client.key
      - KAFKA_REQUIRED_ACKS=1
      - KAFKA_CONSUMER_GROUP_PROMOTIONS=grant-bat-promotions-local
      - TOKEN_LIST
      - UPHOLD_ACCESS_TOKEN
      - "RATIOS_SERVICE=https://ratios.rewards.bravesoftware.com"
      - RATIOS_TOKEN
      - GEMINI_SERVER
      - GEMINI_CLIENT_ID
      - GEMINI_CLIENT_SECRET
      - GEMINI_BROWSER_CLIENT_ID
      - GEMINI_API_KEY
      - GEMINI_API_SECRET
      - GEMINI_TEST_DESTINATION_ID
      - BITFLYER_SERVER
      - BITFLYER_SOURCE_FROM
      - BITFLYER_DRYRUN
      - BITFLYER_CLIENT_ID
      - BITFLYER_CLIENT_SECRET
      - BITFLYER_EXTRA_CLIENT_SECRET
      - BITFLYER_TOKEN
      - "ALLOWED_ORIGINS=http://localhost:8080"
      - SKUS_WHITELIST
    volumes:
      - ./test/secrets:/etc/kafka/secrets
      - ./migrations:/src/migrations
    depends_on:
      - kafka
      - postgres
      - challenge-bypass
    networks:
      - grant

  web:
    container_name: grant-web
    build:
      context: .
      target: artifact
      args:
          VERSION: "${VERSION}"
          COMMIT: "${COMMIT}"
          BUILD_TIME: "${BUILD_TIME}"
    ports:
      - "3333:3333"
      - "6061:6061"
    environment:
      - PPROF_ENABLED=true
      - ENABLE_LINKING_DRAINING=true
      - DRAIN_RETRY_JOB_ENABLED=true
      - ENV=local
      - PKG
      - RUN
      - DEBUG=1
      - BAT_SETTLEMENT_ADDRESS
      - CHALLENGE_BYPASS_SERVER=http://challenge-bypass:2416
      - CHALLENGE_BYPASS_TOKEN
      - "DATABASE_MIGRATIONS_URL=file:///src/migrations"
      - "DATABASE_URL=postgres://grants:password@postgres/grants?sslmode=disable"
      - DONOR_WALLET_CARD_ID
      - DONOR_WALLET_PRIVATE_KEY
      - DONOR_WALLET_PUBLIC_KEY
      - ENCRYPTION_KEY
      - FEATURE_MERCHANT
      - GRANT_SIGNATOR_PUBLIC_KEY
      - GRANT_WALLET_CARD_ID
      - GRANT_WALLET_PRIVATE_KEY
      - GRANT_WALLET_PUBLIC_KEY
      - TEST_PKG
      - TEST_RUN
      - KAFKA_BROKERS=kafka:19092
      - KAFKA_SSL_CA_LOCATION=/etc/kafka/secrets/snakeoil-ca-1.crt
      - KAFKA_SSL_CERTIFICATE_LOCATION=/etc/kafka/secrets/consumer-ca1-signed.pem
      - KAFKA_SSL_KEY_LOCATION=/etc/kafka/secrets/consumer.client.key
      - KAFKA_REQUIRED_ACKS=1
      - KAFKA_CONSUMER_GROUP_PROMOTIONS=grant-bat-promotions-local
      - TOKEN_LIST
      - UPHOLD_ACCESS_TOKEN
      - GEMINI_SERVER
      - GEMINI_CLIENT_ID
      - GEMINI_CLIENT_SECRET
      - GEMINI_BROWSER_CLIENT_ID
      - GEMINI_API_KEY
      - GEMINI_API_SECRET
      - GEMINI_TEST_DESTINATION_ID
      - BITFLYER_SERVER
      - BITFLYER_SOURCE_FROM
      - BITFLYER_DRYRUN
      - BITFLYER_CLIENT_ID
      - BITFLYER_CLIENT_SECRET
      - BITFLYER_EXTRA_CLIENT_SECRET
      - BITFLYER_TOKEN
    volumes:
      - ./test/secrets:/etc/kafka/secrets
      - ./migrations:/src/migrations
    depends_on:
      - kafka
      - postgres
      - challenge-bypass
    networks:
      - grant
  postgres:
    container_name: grant-postgres
    image: postgres:10.4
    ports:
      - "3401:5432"
    environment:
      - "POSTGRES_USER=grants"
      - "POSTGRES_PASSWORD=password"
    networks:
      - grant
    command: ["postgres", "-c", "log_statement=all"]
  challenge-bypass-postgres:
    container_name: challenge-bypass-postgres
    image: postgres:10.4
    environment:
      - "POSTGRES_USER=btokens"
      - "POSTGRES_PASSWORD=password"
    networks:
      - grant
  challenge-bypass:
    container_name: challenge-bypass
    image: brave/challenge-bypass
    restart: always
    ports:
      - "2416:2416"
    environment:
      - "SENTRY_DSN"
      - "DATABASE_URL=postgres://btokens:password@challenge-bypass-postgres/btokens?sslmode=disable"
      - "DATABASE_MIGRATIONS_URL=file:///src/migrations"
    depends_on:
      - challenge-bypass-postgres
    networks:
      - grant
  zookeeper:
    container_name: grant-zookeeper
    image: confluentinc/cp-zookeeper:5.2.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - grant
  kafka:
    container_name: grant-kafka
    image: confluentinc/cp-kafka:5.2.2 # kafka version 2.2.1
    ports:
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "SSL://kafka:19092,SSL2://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL,SSL2:SSL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.broker1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.broker1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: requested
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
    volumes:
      - ./test/secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper
    networks:
      - grant
