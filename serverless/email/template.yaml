AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  email-webhook
  
  Sample SAM Template for email-webhook

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Parameters:
  DeploymentEnvironment:
    Type: String
    Default: "sbx"
    AllowedValues: ["sbx", "prod"]
  WebhookLambdaTracing:
    Type: String
    Default: PassThrough
    AllowedValues: ["Active", "PassThrough"]
  DynamoDBEndpoint:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /aws/service/global-infrastructure/regions/us-west-2/services/dynamodb/endpoint
  EventsDynamoDBRoleArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Events/Variables/DynamoDBRoleArn
  EventsExecutionRoleArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Events/ExecutionRoleArn
  UnsubscribeDynamoDBRoleArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Unsubscribe/Variables/DynamoDBRoleArn
  UnsubscribeExecutionRoleArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Unsubscribe/ExecutionRoleArn
  WebhookSESDomainIdentityArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/SES/DomainIdentityArn
  WebhookDynamoDBRoleArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Webhook/Variables/DynamoDBRoleArn
  WebhookExecutionRoleArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Webhook/ExecutionRoleArn
  VpcSubnetIds:
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>
    Default: /BraveX/VPC/SubnetIds
  EventsLambdaSgIds:
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::SecurityGroup::Id>>
    Default: /BraveX/VPC/EventsLambda/SecurityGroupIds
  UnsubscribeLambdaSgIds:
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::SecurityGroup::Id>>
    Default: /BraveX/VPC/UnsubscribeLambda/SecurityGroupIds
  WebhookLambdaSgIds:
    Type: AWS::SSM::Parameter::Value<List<AWS::EC2::SecurityGroup::Id>>
    Default: /BraveX/VPC/WebhookLambda/SecurityGroupIds
  StatusTopicArn:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Events/StatusTopic
  WebhookSourceEmailAddress:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Webhook/Variables/SourceEmailAddress
  WebhookEmailUuidNamespace:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Webhook/Variables/EmailUUIDNamespace
  WebhookAuthTokens:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Webhook/Variables/AuthTokens
  WebhookConfigSet:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /BraveX/Lambda/Webhook/Variables/ConfigSet

Metadata:
  AWS::ServerlessRepo::Application:
    Name: bravex-frontend
    Description: Frontend Deployment for BraveX Integration Service
    Author: Ben Huson, Nick von Pentz, Harold Spencer Jr.
    Labels:
      - 'bravex'
      - 'webhook'
    HomeePageUrl: https://github.com/brave-intl/bat-go
    SourceCodeUrl: https://github.com/brave-intl/bat-go

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref DeploymentEnvironment

  EmailWebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./webhook/
      Handler: webhook
      Runtime: go1.x
      Role: !Ref WebhookExecutionRoleArn
      Architectures:
        - x86_64
      Environment:
        Variables:
          SOURCE_EMAIL_ADDR: !Ref WebhookSourceEmailAddress
          EMAIL_UUID_NAMESPACE: !Ref WebhookEmailUuidNamespace
          AUTH_TOKENS: !Ref WebhookAuthTokens
          SES_CONFIG_SET: !Ref WebhookConfigSet
          DYNAMODB_ROLE_ARN: !Ref WebhookDynamoDBRoleArn
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpoint
          SES_DOMAIN_SOURCE_ARN: !Ref WebhookSESDomainIdentityArn
          SES_DOMAIN_FROM_ARN: !Ref WebhookSESDomainIdentityArn
          SES_DOMAIN_RETURN_PATH_ARN: !Ref WebhookSESDomainIdentityArn
      Tracing: !Ref WebhookLambdaTracing
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /webhook
            Method: POST
            RestApiId: !Ref ApiGatewayApi

  EmailUnsubscribeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./unsubscribe/
      Handler: unsubscribe
      Runtime: go1.x
      Architectures:
        - x86_64
      Role: !Ref UnsubscribeExecutionRoleArn
      Environment:
        Variables:
          DYNAMODB_ROLE_ARN: !Ref UnsubscribeDynamoDBRoleArn
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpoint
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /unsubscribe
            Method: GET
            RestApiId: !Ref ApiGatewayApi

  SnsEmailNotificationConsumerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: status/
      Handler: status
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: SNS
          Properties:
            Topic: arn:aws:sns:us-west-2:123456789:topic # TODO

Outputs:
  EmailWebhookAPI:
    Description: "API Gateway endpoint URL for Email webhook"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${DeploymentEnvironment}/webhook/"
  EmailWebhookFunction:
    Description: "Email Webhook Function ARN"
    Value: !GetAtt EmailWebhookFunction.Arn

  EmailUnsubscribeAPI:
    Description: "API Gateway endpoint URL for for unsubscribe"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com//${DeploymentEnvironment}/unsubscribe/"
  EmailUnsubscribeFunction:
    Description: "unsubscribe lambda ARN"
    Value: !GetAtt EmailUnsubscribeFunction.Arn
  EmailUnsubscribeFunctionIamRole:
    Description: "Implicit IAM Role created for function"
    Value: !GetAtt EmailUnsubscribeFunctionRole.Arn
  SnsEmailNotificationConsumerFunction:
    Value: !GetAtt SnsEmailNotificationConsumerFunction.Arn
